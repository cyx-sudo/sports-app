name: Sports Booking System CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  # 前端测试和构建
  frontend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - name: Clean and install dependencies
      run: |
        cd frontend
        npm cache clean --force
        rm -rf node_modules package-lock.json
        npm install --include=dev
    
    - name: Run lint
      run: cd frontend && npm run lint
    
    - name: Build project
      run: cd frontend && npm run build
    
    - name: Run tests
      run: cd frontend && npm test --if-present
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: ./frontend/dist/

  # 后端测试和构建
  backend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - name: Clean and install dependencies
      run: |
        cd backend
        npm cache clean --force
        rm -rf node_modules package-lock.json
        npm install --include=dev
    
    - name: Run lint
      run: cd backend && npm run lint
    
    - name: Run tests
      run: cd backend && npm run test
    
    - name: Build project
      run: cd backend && npm run build
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./backend
        fail_ci_if_error: false

  # 集成测试
  integration-test:
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - name: Install backend dependencies
      run: |
        cd backend
        npm cache clean --force
        rm -rf node_modules package-lock.json
        npm install --include=dev
    
    - name: Start backend server
      run: |
        cd backend
        npm run dev &
        sleep 10
    
    - name: Health check
      run: |
        curl -f http://localhost:7001/health

  # 代码质量检查
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - name: Install dependencies
      run: |
        cd frontend
        npm cache clean --force
        rm -rf node_modules package-lock.json
        npm install --include=dev
        cd ../backend
        npm cache clean --force
        rm -rf node_modules package-lock.json
        npm install --include=dev
    
    - name: Run lint check
      run: |
        cd frontend && npx eslint .
        cd ../backend && npm run lint
    
    - name: TypeScript compilation check
      run: |
        cd frontend && npx tsc --noEmit
        cd ../backend && npx tsc --noEmit

  # 安全扫描
  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - name: Install dependencies
      run: |
        cd frontend
        npm install
        cd ../backend
        npm install
    
    - name: Run npm audit
      run: |
        cd frontend && npm audit --audit-level=high
        cd ../backend && npm audit --audit-level=high

  # 部署
  deploy:
    runs-on: ubuntu-latest
    needs: [frontend, backend, integration-test, code-quality]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - name: Download frontend build
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: ./frontend/dist/
    
    - name: Deploy to production
      run: |
        echo "Deploying sports booking system to production..."
        echo "Frontend and backend deployment completed!"
